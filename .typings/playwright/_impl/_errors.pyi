from typing import Optional

def is_target_closed_error(error: Exception) -> bool: ...

class Error(Exception):
    def __init__(self, message: str) -> None: ...
    @property
    def message(self) -> str: ...
    @property
    def name(self) -> Optional[str]: ...
    @property
    def stack(self) -> Optional[str]: ...

class TimeoutError(Error): ...

class TargetClosedError(Error):
    def __init__(self, message: str = ...) -> None: ...
